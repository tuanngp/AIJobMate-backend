"""update cv model

Revision ID: 33b939efc93c
Revises: 5ccf66095861
Create Date: 2025-04-13 11:41:54.153916

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '33b939efc93c'
down_revision: Union[str, None] = '5ccf66095861'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_careerprofile_id', table_name='careerprofile')
    op.drop_table('careerprofile')
    op.drop_index('ix_careerpathway_id', table_name='careerpathway')
    op.drop_table('careerpathway')
    op.add_column('cv', sa.Column('skills', sa.JSON(), nullable=True))
    op.add_column('cv', sa.Column('experiences', sa.JSON(), nullable=True))
    op.add_column('cv', sa.Column('education', sa.JSON(), nullable=True))
    op.add_column('cv', sa.Column('career_goals', sa.JSON(), nullable=True))
    op.add_column('cv', sa.Column('preferred_industries', sa.JSON(), nullable=True))
    op.add_column('cv', sa.Column('strengths', sa.JSON(), nullable=True))
    op.add_column('cv', sa.Column('weaknesses', sa.JSON(), nullable=True))
    op.add_column('cv', sa.Column('skill_gaps', sa.JSON(), nullable=True))
    op.add_column('cv', sa.Column('recommended_career_paths', sa.JSON(), nullable=True))
    op.add_column('cv', sa.Column('recommended_skills', sa.JSON(), nullable=True))
    op.add_column('cv', sa.Column('recommended_actions', sa.JSON(), nullable=True))
    op.add_column('cv', sa.Column('embedding_vector', sa.JSON(), nullable=True))
    op.add_column('cv', sa.Column('analysis_status', sa.String(length=50), nullable=True))
    op.add_column('cv', sa.Column('analysis_error', sa.Text(), nullable=True))
    op.add_column('cv', sa.Column('analysis_task_id', sa.String(length=255), nullable=True))
    op.add_column('cv', sa.Column('last_analyzed_at', sa.DateTime(), nullable=True))
    op.alter_column('cv', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('cv', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_column('cv', 'last_analyzed_at')
    op.drop_column('cv', 'analysis_task_id')
    op.drop_column('cv', 'analysis_error')
    op.drop_column('cv', 'analysis_status')
    op.drop_column('cv', 'embedding_vector')
    op.drop_column('cv', 'recommended_actions')
    op.drop_column('cv', 'recommended_skills')
    op.drop_column('cv', 'recommended_career_paths')
    op.drop_column('cv', 'skill_gaps')
    op.drop_column('cv', 'weaknesses')
    op.drop_column('cv', 'strengths')
    op.drop_column('cv', 'preferred_industries')
    op.drop_column('cv', 'career_goals')
    op.drop_column('cv', 'education')
    op.drop_column('cv', 'experiences')
    op.drop_column('cv', 'skills')
    op.create_table('careerpathway',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('industry', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('required_skills', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('required_experience', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('salary_range_min', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('salary_range_max', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('growth_potential', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='careerpathway_pkey')
    )
    op.create_index('ix_careerpathway_id', 'careerpathway', ['id'], unique=False)
    op.create_table('careerprofile',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('title', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('skills', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('experiences', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('education', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('career_goals', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('preferred_industries', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('strengths', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('weaknesses', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('skill_gaps', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('recommended_career_paths', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('recommended_skills', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('recommended_actions', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('embedding_vector', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='careerprofile_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='careerprofile_pkey')
    )
    op.create_index('ix_careerprofile_id', 'careerprofile', ['id'], unique=False)
    # ### end Alembic commands ###
